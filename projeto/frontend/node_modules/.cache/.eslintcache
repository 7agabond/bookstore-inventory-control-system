[{"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\index.js":"1","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\reportWebVitals.js":"2","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\App.js":"3","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\NaviBar\\Navibar.js":"4","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Route\\RouteComponents.js":"5","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Footer\\Footer.js":"6","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\AddUpdatePJ.js":"7","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\ListaClientes.js":"8","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Livro\\ListaLivro.js":"9","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\Cliente.js":"10","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\AddUpdatePF.js":"11","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Compra\\ListaCompra.js":"12","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Venda\\AddUpdateVenda.js":"13","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Venda\\ListaVendas.js":"14","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Venda\\Teste.js":"15","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Compra\\AddUpdateCompra.js":"16","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Livro\\AddUpdateLivroComponent.js":"17","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\ClienteService.js":"18","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\LivroService.js":"19","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\CompraService.js":"20","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\VendaService.js":"21","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\Clientes.js":"22","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\LivroToPDF.js":"23","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\CompraToPDF.js":"24","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\VendaToPDF.js":"25"},{"size":555,"mtime":1665494712837,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1663094057360,"results":"28","hashOfConfig":"27"},{"size":429,"mtime":1665408287261,"results":"29","hashOfConfig":"27"},{"size":3546,"mtime":1665580006634,"results":"30","hashOfConfig":"27"},{"size":2084,"mtime":1665494596944,"results":"31","hashOfConfig":"27"},{"size":1125,"mtime":1663094057343,"results":"32","hashOfConfig":"27"},{"size":7762,"mtime":1663094057334,"results":"33","hashOfConfig":"27"},{"size":3350,"mtime":1665493246085,"results":"34","hashOfConfig":"27"},{"size":3252,"mtime":1665497160522,"results":"35","hashOfConfig":"27"},{"size":688,"mtime":1663094057336,"results":"36","hashOfConfig":"27"},{"size":8422,"mtime":1663094057333,"results":"37","hashOfConfig":"27"},{"size":3460,"mtime":1665497540890,"results":"38","hashOfConfig":"27"},{"size":9681,"mtime":1665082825613,"results":"39","hashOfConfig":"27"},{"size":3260,"mtime":1665579957453,"results":"40","hashOfConfig":"27"},{"size":51,"mtime":1665494563749,"results":"41","hashOfConfig":"27"},{"size":7330,"mtime":1664300722209,"results":"42","hashOfConfig":"27"},{"size":9515,"mtime":1663789653451,"results":"43","hashOfConfig":"27"},{"size":809,"mtime":1663094057361,"results":"44","hashOfConfig":"27"},{"size":1240,"mtime":1665081769529,"results":"45","hashOfConfig":"27"},{"size":667,"mtime":1663094057362,"results":"46","hashOfConfig":"27"},{"size":657,"mtime":1663094057364,"results":"47","hashOfConfig":"27"},{"size":2862,"mtime":1665491541057,"results":"48","hashOfConfig":"27"},{"size":2537,"mtime":1665496842547,"results":"49","hashOfConfig":"27"},{"size":2579,"mtime":1665498160766,"results":"50","hashOfConfig":"27"},{"size":2735,"mtime":1665579657530,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},"138qgab",{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"55"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"55"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"55"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"55"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"55"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"55"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"55"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\index.js",[],[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\reportWebVitals.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\App.js",["136","137","138"],[],"import './App.css';\r\n\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport Navbar from './components/NaviBar/Navibar';\r\nimport Footer from './components/Footer/Footer';\r\n\r\nimport RouteComponents from './components/Route/RouteComponents';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n   \r\n      <Navbar />\r\n      <RouteComponents />\r\n      <Footer />\r\n   \r\n  </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\NaviBar\\Navibar.js",[],["139","140","141","142"],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Route\\RouteComponents.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Footer\\Footer.js",["143","144","145"],[],"import { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport logo from \"../../assets/img/logo.png\";\r\nimport navIcon1 from \"../../assets/img/nav-icon1.png\";\r\nimport navIcon2 from \"../../assets/img/nav-icon2.png\";\r\nimport navIcon3 from \"../../assets/img/nav-icon3.png\";\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <Container>\r\n        <Row className=\"align-items-center\">\r\n    \r\n          <Col size={12} sm={6}>\r\n            <img src={logo} alt=\"Logo\" />\r\n          </Col>\r\n          <Col size={12} sm={6} className=\"text-center text-sm-end\">\r\n            <div className=\"social-icon\">\r\n              <a href=\"#\">\r\n                <img src={navIcon1} alt=\"Icon\" />\r\n              </a>\r\n              <a href=\"#\">\r\n                <img src={navIcon2} alt=\"Icon\" />\r\n              </a>\r\n              <a href=\"#\">\r\n                <img src={navIcon3} alt=\"Icon\" />\r\n              </a>\r\n            </div>\r\n            <p>Copyright 2022. All Rights Reserved</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\AddUpdatePJ.js",["146","147"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport ClienteService from '../../services/ClienteService.js';\r\n\r\nconst AddUpdatePJ = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [rua, setRua] = useState('')\r\n    const [numero, setNumero] = useState('')\r\n    const [bairro, setBairro] = useState('')\r\n    const [cidade, setCidade] = useState('')\r\n    const [estado, setEstado] = useState('')\r\n    const [cep, setCep] = useState('')\r\n    const [cnpj, setCnpj] = useState('')\r\n    const history = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const saveOrUpdateCliente = (e) => {\r\n        e.preventDefault();\r\n\r\n        const cliente = { name, rua, numero, bairro, cidade, estado, cep, cnpj }\r\n\r\n        if (id) {\r\n            ClienteService.updateCliente(id, cliente).then((response) => {\r\n                window.location.href = \"/clientes\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        } else {\r\n            ClienteService.createClientePf(cliente).then((response) => {\r\n\r\n                console.log(response.data)\r\n\r\n                window.location.href = \"/clientes\";\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        ClienteService.getClienteById(id).then((response) => {\r\n            setName(response.data.name)\r\n            setRua(response.data.rua)\r\n            setNumero(response.data.numero)\r\n            setBairro(response.data.bairro)\r\n            setCidade(response.data.cidade)\r\n            setEstado(response.data.estado)\r\n            setCep(response.data.cep)\r\n            setCnpj(response.data.cnpj)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const title = () => {\r\n\r\n        if (id) {\r\n            return <h1 className=\"text-center\">Atualizar Empresa</h1>\r\n        } else {\r\n            return <h1 className=\"text-center\">Adicionar Empresa</h1>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"container-add\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            title()\r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Razão Social\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"rua\"\r\n                                        name=\"rua\"\r\n                                        className=\"form-control\"\r\n                                        value={rua}\r\n                                        onChange={(e) => setRua(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"numero\"\r\n                                        name=\"numero\"\r\n                                        className=\"form-control\"\r\n                                        value={numero}\r\n                                        onChange={(e) => setNumero(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"bairro\"\r\n                                        name=\"bairro\"\r\n                                        className=\"form-control\"\r\n                                        value={bairro}\r\n                                        onChange={(e) => setBairro(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"cidade\"\r\n                                        name=\"cidade\"\r\n                                        className=\"form-control\"\r\n                                        value={cidade}\r\n                                        onChange={(e) => setCidade(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"estado\"\r\n                                        name=\"estado\"\r\n                                        className=\"form-control\"\r\n                                        value={estado}\r\n                                        onChange={(e) => setEstado(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Cep\"\r\n                                        name=\"cep\"\r\n                                        className=\"form-control\"\r\n                                        value={cep}\r\n                                        onChange={(e) => setCep(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"CNPJ\"\r\n                                        name=\"cnpj\"\r\n                                        className=\"form-control\"\r\n                                        value={cnpj}\r\n                                        onChange={(e) => setCnpj(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <button className=\"btn\" onClick={(e) => saveOrUpdateCliente(e)} >Salvar </button>\r\n                                <Link to=\"/clientes\" className=\"btn\"> Cancel </Link>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUpdatePJ;","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\ListaClientes.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Livro\\ListaLivro.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\Cliente.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Cliente\\AddUpdatePF.js",["148","149"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport ClienteService from '../../services/ClienteService.js';\r\n\r\nconst AddUpdatePF = () => {\r\n\r\n    const [name, setName] = useState('')\r\n    const [rua, setRua] = useState('')\r\n    const [numero, setNumero] = useState('')\r\n    const [bairro, setBairro] = useState('')\r\n    const [cidade, setCidade] = useState('')\r\n    const [estado, setEstado] = useState('')\r\n    const [cep, setCep] = useState('')\r\n    const [rg, setRg] = useState('')\r\n    const [cpf, setCpf] = useState('')\r\n    const history = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const saveOrUpdateCliente = (e) => {\r\n        e.preventDefault();\r\n\r\n        const cliente = { name, rua, numero, bairro, cidade, estado, cep, rg, cpf }\r\n\r\n        if (id) {\r\n            ClienteService.updateCliente(id, cliente).then((response) => {\r\n                window.location.href = \"/clientes\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        } else {\r\n            ClienteService.createClientePf(cliente).then((response) => {\r\n\r\n                console.log(response.data)\r\n\r\n                window.location.href = \"/clientes\";\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        ClienteService.getClienteById(id).then((response) => {\r\n            setName(response.data.name)\r\n            setRua(response.data.rua)\r\n            setNumero(response.data.numero)\r\n            setBairro(response.data.bairro)\r\n            setCidade(response.data.cidade)\r\n            setEstado(response.data.estado)\r\n            setCep(response.data.cep)\r\n            setRg(response.data.rg)\r\n            setCpf(response.data.cpf)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const title = () => {\r\n\r\n        if (id) {\r\n            return <h1 className=\"text-center\">Atualizar Cliente</h1>\r\n        } else {\r\n            return <h1 className=\"text-center\">Adicionar Cliente</h1>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"container-add\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            title()\r\n                        }\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Nome\"\r\n                                        name=\"name\"\r\n                                        className=\"form-control\"\r\n                                        value={name}\r\n                                        onChange={(e) => setName(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"rua\"\r\n                                        name=\"rua\"\r\n                                        className=\"form-control\"\r\n                                        value={rua}\r\n                                        onChange={(e) => setRua(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"numero\"\r\n                                        name=\"numero\"\r\n                                        className=\"form-control\"\r\n                                        value={numero}\r\n                                        onChange={(e) => setNumero(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"bairro\"\r\n                                        name=\"bairro\"\r\n                                        className=\"form-control\"\r\n                                        value={bairro}\r\n                                        onChange={(e) => setBairro(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"cidade\"\r\n                                        name=\"cidade\"\r\n                                        className=\"form-control\"\r\n                                        value={cidade}\r\n                                        onChange={(e) => setCidade(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"estado\"\r\n                                        name=\"estado\"\r\n                                        className=\"form-control\"\r\n                                        value={estado}\r\n                                        onChange={(e) => setEstado(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Cep\"\r\n                                        name=\"cep\"\r\n                                        className=\"form-control\"\r\n                                        value={cep}\r\n                                        onChange={(e) => setCep(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"RG\"\r\n                                        name=\"rg\"\r\n                                        className=\"form-control\"\r\n                                        value={rg}\r\n                                        onChange={(e) => setRg(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Cpf\"\r\n                                        name=\"cpf\"\r\n                                        className=\"form-control\"\r\n                                        value={cpf}\r\n                                        onChange={(e) => setCpf(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <button className=\"btn\" onClick={(e) => saveOrUpdateCliente(e)} >Salvar </button>\r\n                                <Link to=\"/clientes\" className=\"btn\"> Cancel </Link>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUpdatePF;","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Compra\\ListaCompra.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Venda\\AddUpdateVenda.js",["150","151"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport VendaService from '../../services/VendaService';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ClienteService from '../../services/ClienteService';\r\nimport LivroService from '../../services/LivroService';\r\nimport * as yup from 'yup';\r\nimport swal from 'sweetalert';\r\n\r\nconst AddUpdateVenda = () => {\r\n\r\n    const [client, setClient] = useState('')\r\n    const [livro, setLivro] = useState('')\r\n    const [qtdItens, setQtdItens] = useState('')\r\n    const [precoVenda, setPrecoVenda] = useState('')\r\n    const { id } = useParams();\r\n\r\n    const [listaCliente, setlistaCliente] = useState([]);\r\n    const [listaLivros, setlistaLivros] = useState([])\r\n\r\n    const [book, setBook] = useState([]);\r\n\r\n    const venda = {\r\n        client: {\r\n            id: client\r\n        },\r\n        livro: {\r\n            id: livro\r\n        },\r\n        qtdItens,\r\n        precoVenda\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllClientes();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        getAllLivros();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        VendaService.getVendaById(id).then((response) => {\r\n            setClient(response.data.client.id)\r\n            setLivro(response.data.livro.id)\r\n            setQtdItens(response.data.qtdItens)\r\n            setPrecoVenda(response.data.precoVenda)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const getAllClientes = () => {\r\n        ClienteService.getAllClientes()\r\n            .then((response) => {\r\n                setlistaCliente(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const getAllLivros = () => {\r\n        LivroService.getAllLivros()\r\n            .then((response) => {\r\n                setlistaLivros(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    })\r\n\r\n    let schema = yup.object().shape({\r\n        qtdItens: yup.number().required().integer(),\r\n        precoVenda: yup.number().required(),\r\n        livro: yup.object().required().typeError(),\r\n        client: yup.object().required().typeError()\r\n    });\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            client: yup.object().shape({\r\n                id: yup.number()\r\n                    .typeError('Necessario selecionar !')\r\n                    .required(\"O campo é obrigatório.\")\r\n            }),\r\n            livro: yup.object().shape({\r\n                id: yup.number()\r\n                    .typeError('Necessario selecionar !')\r\n                    .required(\"O campo é obrigatório.\")\r\n            }),\r\n            precoVenda: yup.number()\r\n                .typeError('Necessario preencher!')\r\n                .required(\"O campo é obrigatório.\")\r\n                .positive(\"O Preço deve ser maior que 0\"),\r\n            qtdItens: yup.number()\r\n                .typeError('Necessario preenche!')\r\n                .required(\"O campo é obrigatório.\")\r\n                .positive(\"Quantidade deve ser maior que 0\")\r\n                .integer(\"Estoque deve possuir um número inteiro.\"),\r\n        });\r\n\r\n        try {\r\n            await schema.validate(venda)\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({\r\n                type: 'error',\r\n                mensagem: err.errors\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const saveOrUpdateVenda = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const livro = { qtdItens }\r\n\r\n        LivroService.getLivroById(venda.livro.id).then((response) => {\r\n            setBook(response.data);\r\n            console.log(response.data);\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n\r\n        if (id && book.estoque >= venda.qtdItens) {\r\n            LivroService.atualizarLivroVenda(venda.livro.id, id, livro).then((response) => {\r\n                window.location.href = \"/vendas\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            VendaService.updateVenda(id, venda).then((response) => {\r\n                window.location.href = \"/vendas\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        } else if (book.estoque >= venda.qtdItens) {\r\n            LivroService.removerEstoque(venda.livro.id, livro).then((response) => {\r\n\r\n                window.location.href = \"/vendas\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            VendaService.createVenda(venda).then((response) => {\r\n\r\n                console.log(response.data)\r\n\r\n                window.location.href = \"/vendas\";\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n        else {\r\n            swal(\"Oops!\", \"Quantidade Insuficiente!!\", \"warning\");\r\n        }\r\n\r\n    }\r\n\r\n    const title = () => {\r\n\r\n        if (id) {\r\n            return <h1 className=\"text-center\">Atualizar Venda</h1>\r\n        } else {\r\n            return <h1 className=\"text-center\">Adicionar Venda</h1>\r\n        }\r\n    }\r\n\r\n    const valid = (name) => {\r\n        if (status.type === 'error' && name === '') {\r\n            return status.type === 'error' ? <p style={{ color: \"#ff0000\", }}> {status.mensagem}</p> : \"\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"container-add\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            title()\r\n                        }\r\n\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <label className=\"mb-2\">Cliente</label>\r\n                                    <select name=\"client\" className=\"form-control\" onChange={(e) => setClient(e.target.value)}>\r\n                                        <option>--Selecione o Cliente--</option>\r\n                                        {\r\n                                            listaCliente.map((client) => (\r\n                                                <option key={client.id} value={client.id}> {client.name}</option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    {valid(venda.client.id)}\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <label className=\"mb-2\">Livro</label>\r\n                                    <select name=\"livro\" className=\"form-control\" onChange={(e) => setLivro(e.target.value)}>\r\n                                        <option>--Selecione o Livro--</option>\r\n                                        {\r\n                                            listaLivros.map((livro) => (\r\n                                                <option key={livro.id} value={livro.id} > {livro.titulo} </option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                    {valid(venda.livro.id)}\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Quantidade\"\r\n                                        name=\"qtdItens\"\r\n                                        className=\"form-control\"\r\n                                        value={qtdItens}\r\n                                        onChange={(e) => setQtdItens(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                    {valid(venda.qtdItens)}\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        step=\"0.1\"\r\n                                        min='0'\r\n                                        max='20'\r\n                                        placeholder=\"Preco de venda\"\r\n                                        name=\"precoVenda\" s\r\n                                        className=\"form-control\"\r\n                                        value={precoVenda}\r\n                                        onChange={(e) => setPrecoVenda(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                    {valid(precoVenda)}\r\n                                </div>\r\n\r\n                                <button className=\"btn\" onClick={(e) => saveOrUpdateVenda(e)} >Salvar </button>\r\n                                <Link to=\"/vendas\" className=\"btn\"> Cancel </Link>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUpdateVenda;","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Venda\\ListaVendas.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Venda\\Teste.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Compra\\AddUpdateCompra.js",["152","153"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useParams } from 'react-router-dom';\r\nimport CompraService from '../../services/CompraService';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport LivroService from '../../services/LivroService';\r\nimport * as yup from 'yup';\r\n\r\nconst AddUpdateCompra = () => {\r\n\r\n    const [livro, setLivro] = useState('')\r\n    const [qtdItens, setQtdItens] = useState('')\r\n    const [precoVenda, setPrecoVenda] = useState('')\r\n    const { id } = useParams();\r\n\r\n    const [listaLivros, setlistaLivros] = useState([])\r\n\r\n    const compra = {\r\n        livro: {\r\n            id: livro\r\n        },\r\n        qtdItens,\r\n        precoVenda\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllLivros();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        CompraService.getCompraById(id).then((response) => {\r\n            setLivro(response.data.livro.id)\r\n            setQtdItens(response.data.qtdItens)\r\n            setPrecoVenda(response.data.precoVenda)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const getAllLivros = () => {\r\n        LivroService.getAllLivros()\r\n            .then((response) => {\r\n                setlistaLivros(response.data);\r\n                console.log(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            });\r\n    };\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    })\r\n\r\n    let schema = yup.object().shape({\r\n        livro: yup.object().required().typeError(),\r\n        qtdItens: yup.number().required().integer(),\r\n        precoVenda: yup.number().required(),\r\n    });\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            livro: yup.object().shape({\r\n                id: yup.number()\r\n                .typeError('Erro: Necessario selecionar o livro!')\r\n                .required(\"Erro: O campo é obrigatório2.\")\r\n            }),\r\n            precoVenda: yup.number()\r\n                .typeError('Erro: Necessario preencher o preço de venda!')\r\n                .required(\"Erro: O campo é obrigatório.\")\r\n                .positive(\"Erro: O Preço deve ser maior que 0\"),\r\n            qtdItens: yup.number()\r\n                .typeError('Erro: Necessario preencher a quantidade a comprar!')\r\n                .required(\"Erro: O campo é obrigatório.\")\r\n                .positive(\"Erro: Quantidade deve ser maior que 0\")\r\n                .integer(\"Erro: Estoque deve possuir um número inteiro.\")\r\n        });\r\n\r\n        try {\r\n            await schema.validate(compra)\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({\r\n                type: 'error',\r\n                mensagem: err.errors\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const saveOrUpdateCompra = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!(await validate())) return;\r\n\r\n        const livro = { qtdItens };\r\n\r\n        if (id) {\r\n            LivroService.atualizarLivroCompra(compra.livro.id, id, livro).then((response) => {\r\n                console.log(response.data);\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            CompraService.updateCompra(id, compra).then((response) => {\r\n                window.location.href = \"/compras\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        } else {\r\n            LivroService.addEstoque(compra.livro.id, livro).then((response) => {\r\n\r\n                window.location.href = \"/compras\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n            CompraService.createCompra(compra).then((response) => {\r\n\r\n                console.log(response.data)\r\n\r\n                window.location.href = \"/compras\";\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const title = () => {\r\n\r\n        if (id) {\r\n            return <h1 className=\"text-center\">Atualizar Compra</h1>\r\n        } else {\r\n            return <h1 className=\"text-center\">Adicionar Compra</h1>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"container-add\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            title()\r\n                        }\r\n\r\n                        {status.type === 'error' ? <p style={{ color: \"#ff0000\", textAlign: 'center', paddingTop: '5%' }}> {status.mensagem}</p> : \"\"}\r\n\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <label className=\"mb-2\">Livro</label>\r\n                                    <select name=\"livro\" className=\"form-control\" onChange={(e) => setLivro(e.target.value)}>\r\n                                        <option>--Selecione o Livro--</option>\r\n\r\n                                        {\r\n                                            listaLivros.map((livro) => (\r\n                                                <option key={livro.id} value={livro.id} > {livro.titulo} </option>\r\n                                            ))\r\n                                        }\r\n                                    </select>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        placeholder=\"Quantidade\"\r\n                                        name=\"qtdItens\"\r\n                                        className=\"form-control\"\r\n                                        value={qtdItens}\r\n                                        onChange={(e) => setQtdItens(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        step=\"0.1\"\r\n                                        min='0'\r\n                                        max='20'\r\n                                        placeholder=\"Preço\"\r\n                                        name=\"precoVenda\"\r\n                                        className=\"form-control\"\r\n                                        value={precoVenda}\r\n                                        onChange={(e) => setPrecoVenda(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <button className=\"btn\" onClick={(e) => saveOrUpdateCompra(e)} >Salvar </button>\r\n                                <Link to=\"/compras\" className=\"btn\"> Cancel </Link>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUpdateCompra;","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\components\\Livro\\AddUpdateLivroComponent.js",["154","155","156"],[],"import React, { useState, useEffect } from 'react'\r\nimport { Link, useNavigate, useParams } from 'react-router-dom';\r\nimport LivroService from '../../services/LivroService.js';\r\nimport \"./AddUpdateLivroComponent.css\";\r\nimport * as yup from 'yup';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nconst AddUpdateLivroComponent = () => {\r\n\r\n    const [titulo, setTitulo] = useState('')\r\n    const [autor, setAutor] = useState('')\r\n    const [editora, setEditora] = useState('')\r\n    const [linkImg, setLinkImg] = useState('')\r\n    const [anoPublicacao, setAnoPublicacao] = useState('')\r\n    const [estoque, setEstoque] = useState('')\r\n    const history = useNavigate();\r\n    const { id } = useParams();\r\n\r\n    const livro = { titulo, autor, editora, linkImg, anoPublicacao, estoque }\r\n\r\n    const [status, setStatus] = useState({\r\n        type: '',\r\n        mensagem: ''\r\n    })\r\n\r\n    let schema = yup.object().shape({\r\n        titulo: yup.string().required(),\r\n        autor: yup.string().required(),\r\n        editora: yup.string().required(),\r\n        linkImg: yup.string().required(),\r\n        estoque: yup.number().required().integer()\r\n    });\r\n\r\n    async function validate() {\r\n        let schema = yup.object().shape({\r\n            estoque: yup.number()\r\n                .typeError('Erro: Necessario preencher a quantidade do estoque!')\r\n                .required(\"Erro: O campo é obrigatório.\")\r\n                .integer(\"Erro: Estoque deve possuir um número inteiro.\"),\r\n            linkImg: yup.string(\"Erro: Necessario preencher o campo imagem!\")\r\n                .required(\"Erro: Necessario preencher o campo imagem!\"),\r\n            editora: yup.string(\"Erro: Necessario preencher o campo editora!\")\r\n                .required(\"Erro: Necessario preencher o campo editora!\")\r\n                .min(3, \"Erro: Editora deve possuir mais que 3 caracteres \")\r\n                .max(50, \"Erro: Editora passou de 50 caracteres!\"),\r\n            autor: yup.string(\"Erro: Necessario preencher o campo autor!\")\r\n                .required(\"Erro: Necessario preencher o campo autor!\")\r\n                .min(3, \"Erro: Autor deve possuir mais que 3 caracteres \")\r\n                .max(50, \"Erro: Autor passou de 50 caracteres!\"),\r\n            titulo: yup.string(\"Erro: Necessario preencher o campo titulo!\")\r\n                .required(\"Erro: Necessario preencher o campo titulo!\")\r\n                .min(3, \"Erro: Titulo deve possuir mais que 3 caracteres \")\r\n                .max(50, \"Erro: Titulo passou de 50 caracteres!\")\r\n        });\r\n\r\n        try {\r\n            await schema.validate(livro)\r\n            return true;\r\n        } catch (err) {\r\n            setStatus({\r\n                type: 'error',\r\n                mensagem: err.errors\r\n            });\r\n            return false;\r\n        }\r\n    }\r\n\r\n    const dateFormatAux = (date) => {\r\n        var d = new Date(date),\r\n            month = '' + (d.getMonth() + 1),\r\n            day = '' + d.getDate(),\r\n            year = d.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [day, month, year].join('/');\r\n    }\r\n\r\n    const dateFormat = (date) => {\r\n\r\n        let formatYearMonthDay = dateFormatAux(date);\r\n\r\n        return formatYearMonthDay;\r\n    }\r\n\r\n    const saveOrUpdateLivro = async (e) => {\r\n        e.preventDefault();\r\n\r\n        livro.anoPublicacao = dateFormat(anoPublicacao)\r\n\r\n        if (!(await validate())) return;\r\n\r\n        if (id) {\r\n            LivroService.updateLivro(id, livro).then((response) => {\r\n                window.location.href = \"/\";\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n\r\n        } else {\r\n            LivroService.createLivro(livro).then((response) => {\r\n\r\n                console.log(response.data)\r\n\r\n                window.location.href = \"/\";\r\n\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        LivroService.getLivroById(id).then((response) => {\r\n            setTitulo(response.data.titulo)\r\n            setAutor(response.data.autor)\r\n            setEditora(response.data.editora)\r\n            setLinkImg(response.data.linkImg)\r\n            setAnoPublicacao(response.data.format.anoPublicacao)\r\n            setEstoque(response.data.estoque)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }, [])\r\n\r\n    const title = () => {\r\n\r\n        if (id) {\r\n            return <h1 className=\"text-center\">Atualizar Livro</h1>\r\n        } else {\r\n            return <h1 className=\"text-center\">Adicionar Livro</h1>\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <br /><br />\r\n            <div className=\"container-add\">\r\n                <div className=\"row\">\r\n                    <div className=\"card col-md-6 offset-md-3 offset-md-3\">\r\n                        {\r\n                            title()\r\n                        }\r\n\r\n                        {status.type === 'error' ? <p style={{ color: \"#ff0000\", textAlign: 'center' }}> {status.mensagem}</p> : \"\"}\r\n\r\n                        <div className=\"card-body\">\r\n                            <form>\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Titulo\"\r\n                                        name=\"titulo\"\r\n                                        className=\"form-control\"\r\n                                        value={titulo}\r\n                                        onChange={(e) => setTitulo(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Autor\"\r\n                                        name=\"autor\"\r\n                                        className=\"form-control\"\r\n                                        value={autor}\r\n                                        onChange={(e) => setAutor(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Editora\"\r\n                                        name=\"editora\"\r\n                                        className=\"form-control\"\r\n                                        value={editora}\r\n                                        onChange={(e) => setEditora(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"LinkImg\"\r\n                                        name=\"linkImg\"\r\n                                        className=\"form-control\"\r\n                                        value={linkImg}\r\n                                        onChange={(e) => setLinkImg(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <DatePicker\r\n                                        controls={['anoPublicacao']}\r\n                                        selected={anoPublicacao}\r\n                                        onChange={date => setAnoPublicacao(date)}\r\n                                        dateFormat=\"dd/MM/yyyy\"\r\n                                        placeholderText={anoPublicacao}\r\n                                        name=\"anoPublicacao\"\r\n                                        id=\"anoPublicacao\"\r\n                                        className=\"form-control\"\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group mb-2\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"Estoque\"\r\n                                        name=\"estoque\"\r\n                                        className=\"form-control\"\r\n                                        value={estoque}\r\n                                        onChange={(e) => setEstoque(e.target.value)}\r\n                                    >\r\n                                    </input>\r\n                                </div>\r\n\r\n                                <button className=\"btn\" onClick={(e) => saveOrUpdateLivro(e)} >Salvar </button>\r\n                                <Link to=\"/\" className=\"btn\"> Cancel </Link>\r\n                            </form>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddUpdateLivroComponent;","C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\ClienteService.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\LivroService.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\CompraService.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\services\\VendaService.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\Clientes.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\LivroToPDF.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\CompraToPDF.js",[],[],"C:\\projetos\\tqi_evolution_fullstack_2022\\tqi_evolution_fullstack_2022\\projeto\\frontend\\src\\report\\cliente\\VendaToPDF.js",[],[],[],{"ruleId":"157","severity":1,"message":"158","line":3,"column":27,"nodeType":"159","messageId":"160","endLine":3,"endColumn":33},{"ruleId":"157","severity":1,"message":"161","line":3,"column":35,"nodeType":"159","messageId":"160","endLine":3,"endColumn":41},{"ruleId":"157","severity":1,"message":"162","line":3,"column":43,"nodeType":"159","messageId":"160","endLine":3,"endColumn":48},{"ruleId":"163","severity":1,"message":"164","line":104,"column":17,"nodeType":"165","endLine":104,"endColumn":65,"suppressions":"166"},{"ruleId":"163","severity":1,"message":"164","line":105,"column":17,"nodeType":"165","endLine":105,"endColumn":67,"suppressions":"167"},{"ruleId":"163","severity":1,"message":"164","line":106,"column":17,"nodeType":"165","endLine":106,"endColumn":67,"suppressions":"168"},{"ruleId":"163","severity":1,"message":"164","line":107,"column":17,"nodeType":"165","endLine":107,"endColumn":65,"suppressions":"169"},{"ruleId":"163","severity":1,"message":"164","line":20,"column":15,"nodeType":"165","endLine":20,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":23,"column":15,"nodeType":"165","endLine":23,"endColumn":27},{"ruleId":"163","severity":1,"message":"164","line":26,"column":15,"nodeType":"165","endLine":26,"endColumn":27},{"ruleId":"157","severity":1,"message":"170","line":15,"column":11,"nodeType":"159","messageId":"160","endLine":15,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":58,"column":8,"nodeType":"173","endLine":58,"endColumn":10,"suggestions":"174"},{"ruleId":"157","severity":1,"message":"170","line":16,"column":11,"nodeType":"159","messageId":"160","endLine":16,"endColumn":18},{"ruleId":"171","severity":1,"message":"172","line":60,"column":8,"nodeType":"173","endLine":60,"endColumn":10,"suggestions":"175"},{"ruleId":"171","severity":1,"message":"172","line":51,"column":8,"nodeType":"173","endLine":51,"endColumn":10,"suggestions":"176"},{"ruleId":"157","severity":1,"message":"177","line":80,"column":9,"nodeType":"159","messageId":"160","endLine":80,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":37,"column":8,"nodeType":"173","endLine":37,"endColumn":10,"suggestions":"178"},{"ruleId":"157","severity":1,"message":"177","line":55,"column":9,"nodeType":"159","messageId":"160","endLine":55,"endColumn":15},{"ruleId":"157","severity":1,"message":"170","line":17,"column":11,"nodeType":"159","messageId":"160","endLine":17,"endColumn":18},{"ruleId":"157","severity":1,"message":"177","line":27,"column":9,"nodeType":"159","messageId":"160","endLine":27,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":130,"column":8,"nodeType":"173","endLine":130,"endColumn":10,"suggestions":"179"},"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Routes' is defined but never used.","'Route' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement",["180"],["181"],["182"],["183"],"'history' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["184"],["185"],["186"],"'schema' is assigned a value but never used.",["187"],["188"],{"kind":"189","justification":"190"},{"kind":"189","justification":"190"},{"kind":"189","justification":"190"},{"kind":"189","justification":"190"},{"desc":"191","fix":"192"},{"desc":"191","fix":"193"},{"desc":"191","fix":"194"},{"desc":"191","fix":"195"},{"desc":"191","fix":"196"},"directive","","Update the dependencies array to be: [id]",{"range":"197","text":"198"},{"range":"199","text":"198"},{"range":"200","text":"198"},{"range":"201","text":"198"},{"range":"202","text":"198"},[1837,1839],"[id]",[1911,1913],[1480,1482],[1075,1077],[4516,4518]]